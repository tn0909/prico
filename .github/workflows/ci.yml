name: Build and Test

on:
  push:
    branches: [ "master", "develop"  ]
  pull_request:
    branches: [ "master", "develop" ]
    types: [ opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
          
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven
   
    - name: Build with Maven
      run: mvn -B package --file pom.xml

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Get variables
      run: |
        echo "PR_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_ENV
        echo "RUN_ID=${{ github.run_id }}" >> $GITHUB_ENV

    - name: Run tests with coverage
      run: mvn -B clean test

    - name: Upload coverage report
      uses: actions/upload-artifact@v2
      with:
        name: coverage-report
        path: target/site/jacoco

    - name: Add coverage to PR
      env:
        GH_TOKEN: ${{ secrets.GH_SECRET }}
      run: |
        # Generate coverage report and parse results
        line=$(grep 'Total' target/site/jacoco/index.html)
        coverage=$(echo "$line" | cut -d'%' -f 1 | grep -oE '[0-9]+' | tail -n 1)
        message=$(echo -e "### Test Coverage Report\nTotal coverage: $coverage%\n\n*You can download the full report at the [Artifacts section](https://github.com/tn0909/prico/actions/runs/$RUN_ID?pr=$PR_NUMBER)*")
        # Post comment in pull request
        gh pr comment $PR_NUMBER --body "$message"


    - name: Extract modified files
      id: extract-modified-files
      run: |
        # Get the list of modified or added files in the pull request
        git diff --name-only ${{ github.base_ref }} ${{ github.head_ref }} >> modified_files.txt
        modified_files=$(<modified_files.txt)
        echo $modified_files


